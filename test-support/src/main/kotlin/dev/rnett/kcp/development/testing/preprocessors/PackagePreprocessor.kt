package dev.rnett.kcp.development.testing.preprocessors

import org.jetbrains.kotlin.test.model.TestFile
import org.jetbrains.kotlin.test.services.ReversibleSourceFilePreprocessor
import org.jetbrains.kotlin.test.services.TestServices
import org.jetbrains.kotlin.test.services.isKtFile
import org.jetbrains.kotlin.test.services.moduleStructure
import kotlin.io.path.Path
import kotlin.io.path.name
import kotlin.io.path.relativeTo

public class PackagePreprocessor(testServices: TestServices, private val pathPrefix: String = "src/testData") : ReversibleSourceFilePreprocessor(testServices) {

    private val flag = "// generated by PackagePreprocessor"

    override fun revert(file: TestFile, actualContent: String): String {
        if (!file.isKtFile) return actualContent
        return actualContent.lines().filterNot { flag in it }.joinToString("\n")
    }

    override fun process(file: TestFile, content: String): String {
        if (!file.isKtFile) return content

        if (content.lines().any { it.startsWith("package ") })
            return content

        testServices.moduleStructure.allDirectives

        val packageName = file.originalFile.toPath().relativeTo(Path(pathPrefix)).toList().dropLast(1).joinToString(".") { it.name }

        return "package $packageName $flag\n$content"
    }
}